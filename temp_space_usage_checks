Sessions Occupying the temp Tablespace:
=======================================
set lines 200
col OSUSER for a10
col USERNAME for a20
select u.tablespace
       , u.segfile#
       , u.segblk#
       , u.blocks
       , s.sid
       , s.serial#
--       , p.spid
       , s.username
       , s.osuser
       , s.status
from v$session s
   , v$sort_usage u
   , v$process p
where s.saddr = u.session_addr
  and s.paddr = p.addr
order by u.blocks desc;

 
Temp Space  by sessions:
===========================
 
SELECT   b.TABLESPACE
       , b.segfile#
       , b.segblk#
       , ROUND (  (  ( b.blocks * p.VALUE ) / 1024 / 1024 ), 2 ) size_mb
       , a.SID
       , a.serial#
       , a.username
       , a.osuser
       , a.program
       , a.status
    FROM v$session a
       , v$sort_usage b
       , v$process c
       , v$parameter p
   WHERE p.NAME = 'db_block_size'
     AND a.saddr = b.session_addr
     AND a.paddr = c.addr
ORDER BY b.TABLESPACE
       , b.segfile#
       , b.segblk#
       , b.blocks;

With Temp tablespace and Its Usage:
==================================
 
select a.tablespace_name tablespace, 
         d.mb_total,
         sum (a.used_blocks * d.block_size) / 1024 / 1024 mb_used,
         d.mb_total - sum (a.used_blocks * d.block_size) / 1024 / 1024 mb_free
from v$sort_segment a,
        (
          select   b.name, c.block_size, sum (c.bytes) / 1024 / 1024 mb_total
          from     v$tablespace b, v$tempfile c
          where    b.ts#= c.ts#
          group by b.name, c.block_size
        ) d
where    a.tablespace_name = d.name
group by a.tablespace_name, d.mb_total;

— Temp segment usage per session.—
===================================
SELECT S.sid || ',' || S.serial# sid_serial,S.SQL_ID, S.username, S.osuser, P.spid, S.module,
P.program, SUM (T.blocks) * TBS.block_size / 1024 / 1024 mb_used, T.tablespace,
COUNT(*) statements
FROM v$sort_usage T, v$session S, dba_tablespaces TBS, v$process P
WHERE T.session_addr = S.saddr
AND S.paddr = P.addr
AND T.tablespace = TBS.tablespace_name
GROUP BY S.sid, S.serial#,S.SQL_ID, S.username, S.osuser, P.spid, S.module,
P.program, TBS.block_size, T.tablespace
ORDER BY sid_serial;

Identifying WHO is currently using TEMP Segments:
==================================================
SELECT sysdate,a.username, a.sid, a.serial#, a.osuser, a.sql_id, (b.blocks*d.block_size)/1048576 MB_used, c.sql_text
FROM v$session a, v$tempseg_usage b, v$sqlarea c,
(select block_size from dba_tablespaces where tablespace_name='TEMP_VDB159') d
WHERE b.tablespace = 'TEMP'
and a.saddr = b.session_addr
AND c.address= a.sql_address
AND c.hash_value = a.sql_hash_value
AND (b.blocks*d.block_size)/1048576 > 1024
ORDER BY b.tablespace, 6 desc;

YOu can check those complete session details using the SID.. 
============================================================
 
 
set lines 1000 
set pages 1000
col machine for a30
col username for a20
col TO_CHAR(LOGON_TIME,'DD-MM-YYHH24:MM:SS') for a20
col osuser for a15
col EVENT for a40
select inst_id,sid,serial#,status,username,module,machine,osuser,to_char(logon_time,'DD-MM-YY HH24:MM:SS'),event,sql_id from gv$session where sid=&sid;
 

Find SQLTEXT from sqlid:
========================
select SQL_ID,COMMAND_TYPE,SQL_TEXT from gv$sqltext where sql_id='&a' order by piece;
 
 
To Check default temp tablespace:
=================================
SELECT 
    property_name, 
    property_value 
FROM 
    database_properties 
WHERE 
    property_name='DEFAULT_TEMP_TABLESPACE';
 
Change the default Temp tablespace:
+++++++++
 
ALTER DATABASE DEFAULT TEMPORARY TABLESPACE TEMP01;
 
 
To drop Temp tablespace with Contents:
=====================================
 
DROP TABLESPACE temp2 INCLUDING CONTENTS AND DATAFILES;
 
 

Temp Space Utilization Checks:( Historical ):
=============================================
 
To check total Temp Space for Individual SQL ID:
 
select sql_id,max(TEMP_SPACE_ALLOCATED)/(1024*1024*1024) gig from DBA_HIST_ACTIVE_SESS_HISTORY where sql_id='27cud5wuadbzq' group by sql_id order by gig desc;
 
 

Historical temp space usage by sessions executing sql_id:
=========================================================
 
SELECT ASH.inst_id,
ASH.user_id,
ASH.session_id sid,
ASH.session_serial# serial#,
ASH.sql_id,
ASH.sql_exec_id,
ASH.sql_opname,
ASH.module,
MIN(sample_time) sql_start_time,
MAX(sample_time) sql_end_time,
((CAST(MAX(sample_time) AS DATE)) - (CAST(MIN(sample_time) AS DATE))) * (3600*24) etime_secs ,
((CAST(MAX(sample_time) AS DATE)) - (CAST(MIN(sample_time) AS DATE))) * (60*24) etime_mins ,
MAX(temp_space_allocated)/(1024*1024) max_temp_mb
FROM gv$active_session_history ASH
WHERE ASH.session_type = 'FOREGROUND'
AND ASH.sql_id IS NOT NULL
AND ASH.sql_id='&SQL_ID'
GROUP BY ASH.inst_id,
ASH.user_id,
ASH.session_id,
ASH.session_serial#,
ASH.sql_id,
ASH.sql_opname,
ASH.sql_exec_id,
ASH.module
HAVING MAX(temp_space_allocated) > 0;

